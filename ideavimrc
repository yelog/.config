" 执行 :actionlist 可以查看所有列表
" 或者打开 track action ids 在执行对应的action, 就会在右下角显示
source ~/.config/nvim/base.vim

nnoremap <c-p> gT
nnoremap <c-n> gt
nnoremap <c-q> :q<CR>
" noremap <C-U> 5<C-y>
" noremap <C-D> 5<C-e>
" 分屏
" map <leader>s <nop>
" map <leader>sl :set splitright<CR>:vsplit<CR>
" map <leader>sh :set nosplitright<CR>:vsplit<CR>
" map <leader>sk :set nosplitbelow<CR>:split<CR>
" map <leader>sj :set splitbelow<CR>:split<CR>
" map <leader>sH <C-w>H
" map <leader>sL <C-w>L
" map <leader>sJ <C-w>J
" map <leader>sK <C-w>K
" map <leader>so <c-w>o
" map <leader>sc <c-w>c
" 切换分屏焦点
noremap <m-l> <C-w>l
noremap <m-h> <C-w>h
noremap <m-j> <C-w>j
noremap <m-k> <C-w>k

"let g:surround_no_mappings = 1
"
set keep-english-in-normal
set surround
" 重命名时保持normal状态
set idearefactormode=keep
let g:EasyMotion_override_acejump = 0
let mapleader=" "

" 屏蔽key
noremap u u
noremap e e
nnoremap r r

nnoremap Y :let @+=@"<CR>
vnoremap Y "+y

" 搜索
set hlsearch
noremap <LEADER><CR> :nohlsearch<CR>

" multiple-cursors
set multiple-cursors
set commentary

set number
set relativenumber

" split
noremap <silent> <up> :action StretchSplitToTop<CR>
noremap <silent> <down> :action StretchSplitToBottom<CR>
noremap <silent> <right> :action StretchSplitToRight<CR>
noremap <silent> <left> :action StretchSplitToLeft<CR>

" input :actionlist view all mapping
" store in desktop/docs/idea-vim-action-list.md
nnoremap <silent> <leader>d :action QuickJavaDoc<CR>
nnoremap <silent> gd :action GotoImplementation<CR>
nnoremap <silent> gD :action GotoDeclaration<CR>
"nnoremap <silent> gi gi
"nnoremap <silent> gi :action GotoSuperMethod<CR>
nnoremap <silent> gf :action GotoFile<CR>
vnoremap <silent> gf :action GotoFile<CR>
" nnoremap <silent> <leader>fu :action FindUsages<CR>
nnoremap <silent> gu :action ShowUsages<CR>
nnoremap <silent> <leader>se :action EvaluateExpression<CR>
vnoremap <silent> <leader>se :action EvaluateExpression<CR>
noremap <C-O> :action Back<CR>
noremap <C-I> :action Forward<CR>

nnoremap <silent> <leader>// :action CommentByLineComment<CR>
vnoremap <silent> <leader>/ :action CommentByLineComment<CR>

" add a new class
nmap <leader>nc <Action>(NewClass)

"修改所有的关联名字
nnoremap <Leader>rn :action RenameElement<CR>
"修改当前文件的文件名
nnoremap <silent> <leader>rf :action RenameFile<CR>

"bookmark
nnoremap <silent> mm :action ToggleBookmark<CR>
nnoremap <silent> gm :action GotoNextBookmark<CR>
nnoremap <silent> gM :action GotoPreviousBookmark<CR>
nnoremap <silent> <leader>m :action popup@BookmarkContextMenu<CR>

" lsp
" nnoremap <silent> <leader>ln :action GotoNextError<CR>
" nnoremap <silent> <leader>lp :action GotoPreviousError<CR>
nnoremap <silent> <leader>gj :action VcsShowNextChangeMarker<CR>
nnoremap <silent> <leader>gk :action VcsShowPrevChangeMarker<CR>
" jump to next error
nnoremap <leader>lj <ESC>:action GotoNextError<CR>
" jump to previous error
nnoremap <leader>lk <ESC>:action GotoPreviousError<CR>
nnoremap <silent> <leader>ll :action OptimizeImports<CR>:action ReformatCode<CR>
" autocmd FileType * nnoremap <buffer> <leader>ll :action OptimizeImports<CR>:action ReformatCode<CR>
" autocmd FileType vue,javascript nnoremap <buffer> <leader>ll :action Javascript.Linters.EsLint.Fix<CR>

nnoremap <silent> yr :CopyReference<CR>

Plug 'preservim/nerdtree'
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") &&b:NERDTreeType == "primary") | q | endif
" vim打开自动NERDTree
autocmd vimenter * NERDTree

nnoremap <silent> yp :CopyPath<CR>
nnoremap <silent> go :action FileChooser.LightEditGotoOpenedFile<CR>

" Breakpoint
nnoremap <silent> <leader>sb :action ToggleLineBreakpoint<CR>
nnoremap <silent> gb :action Debugger.FocusOnBreakpoint<CR>
" Debug
nnoremap <silent> <leader>do :action StepOver<CR>
nnoremap <silent> <leader>di :action StepInto<CR>
nnoremap <silent> <leader>dr :action Resume<CR>


vnoremap * "oyy/<c-r>o<CR>
vnoremap # "oyy/<c-r>o<CR>N

nnoremap <silent> <leader>ff :action GotoFile<CR>

" Better uncommenting
"augroup uncommenting
  "autocmd!
  "autocmd filetype java nnoremap <buffer> <leader>u ^3x
  "autocmd FileType vue nnoremap <buffer> <C-s> :action Javascript.Linters.EsLint.Fix<CR>
  "autocmd FileType java nnoremap <buffer> <C-s> :action ReformatCode<CR>
"augroup end

set which-key
set notimeout
set matchit
" let g:ideavim_xml_enabled = 1

" ===
" === vim-easymotion
" ===
Plug 'easymotion/vim-easymotion'
set easymotion
let g:EasyMotion_do_mapping = 0
let g:EasyMotion_do_shade = 0
let g:EasyMotion_smartcase = 1
let g:EasyMotion_startofline = 0 " keep cursor column when JK motion
map , <Plug>(easymotion-prefix)
map ,j <Plug>(easymotion-j)
map ,k <Plug>(easymotion-k)
map ,l <Plug>(easymotion-lineforward)
map ,h <Plug>(easymotion-linebackward)
"map ;s <Plug>(easymotion-sn)
map ,s <Plug>(easymotion-s2)
map ,t <Plug>(easymotion-tn)
map ,w <Plug>(easymotion-bd-w)


" jump to next change
" noremap <leader>gj :action NextChange
" nnoremap <leader>gj :cn<CR>

" nnoremap <leader>gj :action NextChange<CR>

" nmap <leader><leader>s :action KJumpAction<cr>
nmap <leader><leader>w :action KJumpAction.Word0<cr>
nmap <leader><leader>s :action KJumpAction.KJumpAction<cr>
nmap <leader><leader>l :action KJumpAction.Line<cr>

nmap s <Action>(flash.search)
xmap s <Action>(flash.search)
" xnoremap s <Action>(flash.search)
" map f <Action>(flash.find)

set quickscope
let g:qs_highlight_on_keys = ['f', 'F', 't', 'T']
let g:qs_primary_color = '#ff0000'
let g:qs_accepted_chars = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9']
