################# key-prefix ##################
set-option -g prefix C-a
bind-key a send-prefix

################# key-window ##################
# window navigate
bind-key C-a last-window
bind-key h next-window
bind-key l previous-window
# bind-key jn C-S-j next-window
bind-key -n C-S-n swap-window -t -1 \; previous-window
bind-key -n C-S-p swap-window -t +1 \; next-window

# set window split
bind-key v split-window -h
bind-key V split-window
bind-key < swap-window -t -1 \; previous-window
bind-key > swap-window -t +1 \; next-window

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

#bind -n M-1 select-window -t 1

################# key-pane ##################

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize pane
# and now unbind keys
unbind Up
unbind Down
unbind Left
unbind Right
bind-key -n S-Right resize-pane -R 5
bind-key -n S-Left resize-pane -L 5
bind-key -n S-Up resize-pane -U 5
bind-key -n S-Down resize-pane -D 5

# kill pane
bind-key C-X kill-pane

################# key-session ##################
bind d detach
bind D if -F '#{session_many_attached}' \
    'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
    'display "Session has only 1 client attached"'
################# key-others ##################
# reload config
bind r source-file ~/.config/tmux/tmux.conf \; display-message "Config reloaded..."
# popup tmux pane
bind-key -n M-3 run-shell '$HOME/.config/tmux/toggle-tmux-popup'
# -- toggle_status
bind C-s if -F '#{s/off//:status}' 'set status off' 'set status on'


################# config ##################
# rm mouse mode fail
set -g mouse on
# Start numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# auto window rename
set-window-option -g automatic-rename

################# config-status ##################

# status bar
if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 2\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'set-option -g status-utf8 on'

set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left-length 90
set -g status-right-length 140
#set -g status-left '#[fg=green]#H #[fg=black]• #[fg=green,bright]#(uname -r | cut -c 1-6)#[default]'
#set -g status-right '#[fg=gwindow-status-formatreen,bg=default,bright]#(tmux-mem-cpu-load) #[fg=red,dim,bg=default]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white,bg=default]%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'
setw -g window-status-format '#[fg=brightblue] #I #W '
setw -g window-status-current-format '#[fg=magenta,bold] #I #W:#F'
setw -g window-status-activity-style bg=black
setw -g window-status-bell-style bg=black
#set-option -g status-left "#(~/.config/tmux/tmux-powerline/powerline.sh left)"
#set-option -g status-right "#(~/.config/tmux/tmux-powerline/powerline.sh right)"

# Vi copypaste mode
set-window-option -g mode-keys vi
if-shell "test '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 4 \)'" 'bind-key -Tcopy-mode-vi v send -X begin-selection; bind-key -Tcopy-mode-vi y send -X copy-selection-and-cancel'
if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 4\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'bind-key -t vi-copy v begin-selection; bind-key -t vi-copy y copy-selection'


#if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 1\)' 'set -g mouse off'
#if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 1\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'set -g mode-mouse off'

# fix pane_current_path on new window and splits
if-shell "test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)'" 'unbind c; bind c new-window -c "#{pane_current_path}"'
if-shell "test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)'" "unbind '\"'; bind '\"' split-window -v -c '#{pane_current_path}'"
if-shell "test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)'" 'unbind v; bind v split-window -h -c "#{pane_current_path}"'

# style

# https://github.com/seebi/tmux-colors-solarized/blob/master/tmuxcolors-256.conf
set-option -g status-style bg=colour235,fg=colour136,default # bg=base02, fg=yellow
# default window title colors
set-window-option -g window-status-style fg=colour244,bg=default,dim # fg=base0
# active window title colors
set-window-option -g window-status-current-style fg=colour166,bg=default,bright # fg=orange
# pane border
#set-option -g pane-border-style fg=colour235 #fg=base02
#set-option -g pane-active-border-style fg=colour240 #fg=base01

set-option -g pane-border-style fg='#F7D7AF',bg=black # 设置边界颜色（bg背景颜色， fg为线条颜色）

# message text
set-option -g message-style bg=colour235,fg=colour166 # bg=base02, fg=orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange
# clock
set-window-option -g clock-mode-colour green #green


# Try screen256-color (https://github.com/tmux/tmux/issues/622):
# if-shell "test '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 6 \)'" 'set -g default-terminal "screen-256color"'
# if-shell "test '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 6 \)'" 'set -ga terminal-overrides ",screen-256color:Tc"'
#
# if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 6\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'set -g default-terminal "screen-256color"'

set -g default-terminal screen-256color
set-option -ga terminal-overrides ",*256col*:Tc" # 这句是关键


# Undercurl
set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# https://github.com/jeffkreeftmeijer/vim-numbertoggle
set-option -g focus-events on
